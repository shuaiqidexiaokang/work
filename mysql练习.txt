public int all(int n){
	double sum = 0;
	int a = -1;
	for(int i = 0 ;i < n ;i++){
		double item = Math.power(a,i) * 1.0/(i + 1);
		sum += item;
	}
	return sum;
}

public String[] qc(String[] arg){
	List<String> list = new ArrayList<>();
	for(int i = 0;i< arg.lenth; i++){
		if(!list.contain(arg[i])){
			list.add(arg[i]);
		}
	}
	return list.toArray();
}

public void sort(int[] array){
	for(int i = 0; i< array.lenth;i++){
		for(int j = i + 1;j<array.lenth; j++){
			if(array[i] < array[j]){
				int temp = array[i];
				array[i] = array[j];
				array[j] = temp;
			}
		}
	}
}

1.学生表
Student(SID,Sname,Sage,Ssex) --SID 学生编号,Sname 学生姓名,Sage 出生年月,Ssex 学生性别

2.课程表
Course(CID,Cname,TID) --CID --课程编号,Cname 课程名称,TID 教师编号

3.教师表
Teacher(TID,Tname) --TID 教师编号,Tname 教师姓名

4.成绩表
SC(SID,CID,score) --SID 学生编号,CID 课程编号,score 分数

1.学生表
create table Student(SID varchar(10),Sname nvarchar(10),Sage datetime,Ssex nvarchar(10));
insert into Student values('01' , '赵雷' , '1990-01-01' , '男');
insert into Student values('02' , '钱电' , '1990-12-21' , '男');
insert into Student values('03' , '孙风' , '1990-05-20' , '男');
insert into Student values('04' , '李云' , '1990-08-06' , '男');
insert into Student values('05' , '周梅' , '1991-12-01' , '女');
insert into Student values('06' , '吴兰' , '1992-03-01' , '女');
insert into Student values('07' , '郑竹' , '1989-07-01' , '女');
insert into Student values('08' , '王菊' , '1990-01-20' , '女');

2.课程表
create table Course(CID varchar(10),Cname nvarchar(10),TID varchar(10));
insert into Course values('01' , '语文' , '02');
insert into Course values('02' , '数学' , '01');
insert into Course values('03' , '英语' , '03');

3.教师表
create table Teacher(TID varchar(10),Tname nvarchar(10));
insert into Teacher values('01' , '张三');
insert into Teacher values('02' , '李四');
insert into Teacher values('03' , '王五');

4.成绩表
create table SC(SID varchar(10),CID varchar(10),score decimal(18,1));
insert into SC values('01' , '01' , 80);
insert into SC values('01' , '02' , 90);
insert into SC values('01' , '03' , 99);
insert into SC values('02' , '01' , 70);
insert into SC values('02' , '02' , 60);
insert into SC values('02' , '03' , 80);
insert into SC values('03' , '01' , 80);
insert into SC values('03' , '02' , 80);
insert into SC values('03' , '03' , 80);
insert into SC values('04' , '01' , 50);
insert into SC values('04' , '02' , 30);
insert into SC values('04' , '03' , 20);
insert into SC values('05' , '01' , 76);
insert into SC values('05' , '02' , 87);
insert into SC values('06' , '01' , 31);
insert into SC values('06' , '03' , 34);
insert into SC values('07' , '02' , 89);
insert into SC values('07' , '03' , 98);


1、查询"01"课程比"02"课程成绩高的学生的信息及课程分数
select student.*,sc.score
from sc
left join student
on student.SID = sc.SID
where student.sid in(
select a.SID
from sc a,sc b
where a.SID = b.SID and a.CID = '01' and b.CID = '02' and a.score > b.score)

3、查询平均成绩大于等于60分的同学的学生编号和学生姓名和平均成绩
select a.sid,a.Sname,avg(b.score)
from student a,sc b
where a.sid = b.sid
group by a.sid
having avg(b.score) >= 60

4.1、查询sc表不存在成绩的学生信息的SQL语句。
select * 
from student 
where sid not in(
	select sid
	from sc
)

5、查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩
select a.sid,a.sname,count(b.cid),sum(b.score)
from student a
inner join sc b
on a.sid = b.sid
group by a.sid,a.sname

6、查询"李"姓老师的数量
select count(*)
from teacher
where tname like '李%'

8、查询没学过"张三"老师授课的同学的信息
select * from student where sid not in(
	select sid from sc where cid in(
		select cid from course where tid in(
			select tid from teacher where tname = '张三'
		)
	)
)

9、查询学过编号为"01"并且也学过编号为"02"的课程的同学的信息
select * from student where sid in(
select distinct a.sid
from sc a,sc b
where a.sid = b.sid and a.cid = '01' and b.cid = '02')

10、查询学过编号为"01"但是没有学过编号为"02"的课程的同学的信息
select * 
from student 
where sid not in(select sid from sc where cid = '02') and sid in(select sid from sc where cid = '01')

11、查询没有学全所有课程的同学的信息
select * from student where sid not in(
select sid 
from sc
group by sid
having count(cid) = (select count(*) from course))

12、查询至少有一门课与学号为"01"的同学所学相同的同学的信息
select distinct a.*
from student a,sc b
where a.sid = b.sid and b.cid in(
select cid from sc where sid = '01') and a.sid != '01'

13、查询和"01"号的同学学习的课程完全相同的其他同学的信息
select * from student where sid in (
	select sid
	from sc
	where cid in(select cid from sc where sid = '01') and sid != '01'
	group by sid
	having count(*) = (select count(*) from sc where sid = '01')
)

14、查询没学过"张三"老师讲授的任一门课程的学生姓名
select sname
from student
where sid not in (
	select distinct c.sid
	from teacher a, course b,sc c
	where a.tid = b.tid and c.cid = b.cid and a.tname = '张三'
)

15、查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩
select a.sid,a.sname,avg(b.score)
from student a,sc b
where a.sid in(
	select sid from sc where score < 60
	group by sid
	having count(*) > 1
) and a.sid = b.sid
group by a.sid,a.sname

16、检索"01"课程分数小于60，按分数降序排列的学生信息
select a.* 
from student a,sc b
where a.sid = b.sid and b.cid = '01' and b.score < 60
order by b.score desc

17、按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩
select a.sid,a.sname,
	max(case b.cid when '01' then b.score else null end),
	max(case b.cid when '02' then b.score else null end),
	max(case b.cid when '03' then b.score else null end),
	avg(b.score)
from student a,sc b
where a.sid = b.sid
group by a.sid,a.sname
order by avg(b.score) desc

18、查询各科成绩最高分、最低分和平均分：以如下形式显示：课程ID，课程name，最高分，最低分，平均分，及格率，中等率，优良率，优秀率
及格为>=60，中等为：70-80，优良为：80-90，优秀为：>=90
select 
	a.cid  课程ID,
	a.cname 课程name,
	max(b.score) 最高分,
	min(b.score) 最低分,
	cast(avg(b.score) as decimal(18,1)) 平均分,
	cast((select count(*) from sc where cid = a.cid and score >= 60)*100.0/(select count(*) from sc where cid = a.cid) as decimal(18,1)) 及格率,
	cast((select count(*) from sc where cid = a.cid and score >= 70 and score < 80)*100.0/(select count(*) from sc where cid = a.cid) as decimal(18,1)) 中等率,
	cast((select count(*) from sc where cid = a.cid and score >= 80 and score < 90)*100.0/(select count(*) from sc where cid = a.cid) as decimal(18,1)) 优良率,
	cast((select count(*) from sc where cid = a.cid and score >= 90)*100.0/(select count(*) from sc where cid = a.cid) as decimal(18,1)) 优秀率
from course a,sc b
where a.cid = b.cid
group by a.cid,a.cname

19、按各科成绩进行排序，并显示排名
--Score重复时保留名次空缺
select t.* , (select count(1) from SC where CID = t.CID and score > t.score) + 1 px from sc t order by t.cid , px

--Score重复时合并名次
select t.* , (select count(distinct score) from SC where CID = t.CID and score >= t.score) px from sc t order by t.cid , px

20、查询学生的总成绩并进行排名
select 
	a.sid 学生id,
	a.sname 学生name,
	ifnull(sum(b.score),0) 总成绩
from student a
left join sc b
on a.sid = b.sid
group by a.sid,a.sname
order by sum(b.score) desc

21、查询不同老师所教不同课程平均分从高到低显示
select 
	c.tname,
	b.cname,
	cast(avg(a.score) as decimal(18,1)) 平均分
from sc a,course b,teacher c
where a.cid = b.cid and b.tid = c.tid
group by a.cid
order by avg(a.score) desc

22、查询所有课程的成绩第2名到第3名的学生信息及该课程成绩
select * from 
(select t.*,
	(select count(*) from sc where cid = t.cid and score > t.score) + 1 px
from sc t) m
where px between 2 and 3
order by m.cid,m.px

23、统计各科成绩各分数段人数：课程编号,课程名称, 100-85 , 85-70 , 70-60 , 0-60 及所占百分比
select 
	b.cid 课程编号,
	b.cname 课程名称,
	cast((select count(*) from sc where cid = b.cid and score >= 85)*100.0/(select count(*) from sc where cid = b.cid) as decimal(18,1)) '100-85',
	cast((select count(*) from sc where cid = b.cid and score >= 70 and score < 85)*100.0/(select count(*) from sc where cid = b.cid) as decimal(18,1)) '85-70',
	cast((select count(*) from sc where cid = b.cid and score >= 60 and score < 70)*100.0/(select count(*) from sc where cid = b.cid) as decimal(18,1)) '70-60',
	cast((select count(*) from sc where cid = b.cid and score < 60)*100.0/(select count(*) from sc where cid = b.cid) as decimal(18,1)) '0-60'
from sc a,course b
where a.cid = b.cid
group by a.cid

25、查询各科成绩前三名的记录
select *
from (select a.*,(select count(*) from sc where cid = a.cid and score > a.score) + 1 px from sc a) m
where m.px <=3
order by m.cid,px

26、查询每门课程被选修的学生数
select cid,count(*) from sc group by cid

27、查询出只有两门课程的全部学生的学号和姓名
select a.sid,a.sname
from student a,sc b
where a.sid = b.sid
group by a.sid,a.sname
having count(*) = 2

28、查询男生、女生人数
select ssex,count(*)
from student 
group by ssex

29、查询名字中含有"风"字的学生信息
select *
from student
where sname like '%风%'

30、查询同名同性学生名单，并统计同名人数	
select Sname 学生姓名 , count(*) 人数 from Student group by Sname having count(*) > 1

31、查询1990年出生的学生名单(注：Student表中Sage列的类型是datetime)
select * from Student where year(sage) = 1990

32、查询每门课程的平均成绩，结果按平均成绩降序排列，平均成绩相同时，按课程编号升序排列
select cid,cast(avg(score) as decimal(18,1))
from sc
group by cid
order by avg(score) desc,sid

33、查询平均成绩大于等于85的所有学生的学号、姓名和平均成绩
select a.sid,a.sname,cast(avg(b.score) as decimal(18,1))
from student a,sc b
where a.sid = b.sid
group by a.sid,a.sname
having avg(b.score)>=85

34、查询课程名称为"数学"，且分数低于60的学生姓名和分数
select a.sname,b.score
from student a,sc b,course c
where a.sid = b.sid and b.cid = c.cid and b.score < 60 and c.cname = '数学'

35、查询所有学生的课程及分数情况
select a.*,c.cid,c.cname,b.score
from student a,sc b,course c
where a.sid = b.sid and b.cid = c.cid

36、查询任何一门课程成绩在70分以上的姓名、课程名称和分数
select a.sname,c.cname,b.score
from student a,sc b,course c
where a.sid = b.sid and b.cid = c.cid and b.score >= 70

37、查询不及格的课程
select a.sname,c.cname,b.score
from student a,sc b,course c
where a.sid = b.sid and b.cid = c.cid and b.score < 60

38、查询课程编号为01且课程成绩在80分以上的学生的学号和姓名
select a.sid,a.sname
from student a,sc b
where a.sid = b.sid and b.cid = '01' and b.score >= 80

39、求每门课程的学生人数
select cid,count(*)
from sc
group by cid

40、查询选修"张三"老师所授课程的学生中，成绩最高的学生信息及其成绩
select a.*,max(b.score)
from student a,sc b,course c,teacher d
where a.sid = b.sid and b.cid = c.cid and c.tid = d.tid and d.tname = '张三'

41、查询不同课程成绩相同的学生的学生编号、课程编号、学生成绩
select m.* from SC m ,(select CID , score from SC group by CID , score having count(1) > 1) n
where m.CID= n.CID and m.score = n.score order by m.CID , m.score , m.SID

42、查询每门功成绩最好的前两名
select m.*
from (select a.*,(select count(*) from sc where cid = a.cid and score > a.score) + 1 px from sc a) m
where m.px < 3
order by m.cid,m.px asc

43、统计每门课程的学生选修人数（超过5人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列
select cid,count(*)
from sc
group by cid
having count(*) > 5
order by count(*) desc,cid

44、检索至少选修两门课程的学生学号
select student.*
from student,sc
where student.sid = sc.sid
group by student.sid
having count(*) >= 2

45、查询选修了全部课程的学生信息
select student.*
from student,sc
where student.sid = sc.sid
group by sc.sid
having count(*) = (select count(*) from course)

46、查询各学生的年龄
select * , date_format(now(),'%Y')-DATE_FORMAT(Sage,'%Y') 年龄 from student

47、查询本周过生日的学生
select *
from student
where date_format(sage,'%v') = date_format(now(),'%v')

48、查询下周过生日的学生
select *
from student
where date_format(sage,'%v') = date_format(now(),'%v') + 1

49、查询本月过生日的学生
select *
from student
where date_format(sage,'%m') = date_format(now(),'%m')

50、查询下月过生日的学生
select *
from student
where date_format(sage,'%m') = date_format(now(),'%m') + 1